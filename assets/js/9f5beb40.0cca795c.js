"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[5626],{7320:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var o=n(4848),i=n(8453);const s={slug:"css/animate-transition-from-display-none",title:"Animate transition from display: none to display: block",authors:["me"],tags:["CSS","Animation","Transition","starting-style"]},a=void 0,r={permalink:"/gerardo-perrucci/blog/css/animate-transition-from-display-none",source:"@site/blog/css/2024-08-25-animate-transition-from-display-none.mdx",title:"Animate transition from display: none to display: block",description:"Animating elements from display block has long been a challenge in CSS. The traditional display property doesn't support transitions, making smooth animations difficult. However, with the introduction of the @starting-style at-rule and other new CSS features, we now have powerful tools to create seamless transitions between these states.",date:"2024-08-25T00:00:00.000Z",tags:[{label:"CSS",permalink:"/gerardo-perrucci/blog/tags/css"},{label:"Animation",permalink:"/gerardo-perrucci/blog/tags/animation"},{label:"Transition",permalink:"/gerardo-perrucci/blog/tags/transition"},{label:"starting-style",permalink:"/gerardo-perrucci/blog/tags/starting-style"}],readingTime:3.02,hasTruncateMarker:!0,authors:[{name:"Gerardo Perrucci",title:"Software Engineer",url:"https://github.com/centrodph",imageURL:"https://avatars.githubusercontent.com/u/2073951?v=4",key:"me"}],frontMatter:{slug:"css/animate-transition-from-display-none",title:"Animate transition from display: none to display: block",authors:["me"],tags:["CSS","Animation","Transition","starting-style"]},unlisted:!1,nextItem:{title:"Handling Forms in Next.js 13+ with Server Actions",permalink:"/gerardo-perrucci/blog/nextjs/nextjs-14-nextjs-13-handling-forms"}},l={authorsImageUrls:[void 0]},c=[];function d(t){const e={code:"code",p:"p",...(0,i.R)(),...t.components};return(0,o.jsxs)(e.p,{children:["Animating elements from ",(0,o.jsx)(e.code,{children:"display: none"})," to ",(0,o.jsx)(e.code,{children:"display: block"})," has long been a challenge in CSS. The traditional ",(0,o.jsx)(e.code,{children:"display"})," property doesn't support transitions, making smooth animations difficult. However, with the introduction of the ",(0,o.jsx)(e.code,{children:"@starting-style"})," at-rule and other new CSS features, we now have powerful tools to create seamless transitions between these states."]})}function m(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>r});var o=n(6540);const i={},s=o.createContext(i);function a(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);