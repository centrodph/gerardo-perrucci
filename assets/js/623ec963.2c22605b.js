"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[906],{6028:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(4848),s=t(8453);const r={slug:"css/animate-transition-from-display-none",title:"Animate transition from display: none to display: block",authors:["me"],tags:["CSS","Animation","Transition","starting-style"]},o=void 0,a={permalink:"/gerardo-perrucci/blog/css/animate-transition-from-display-none",source:"@site/blog/css/2024-08-25-animate-transition-from-display-none.mdx",title:"Animate transition from display: none to display: block",description:"Animating elements from display block has long been a challenge in CSS. The traditional display property doesn't support transitions, making smooth animations difficult. However, with the introduction of the @starting-style at-rule and other new CSS features, we now have powerful tools to create seamless transitions between these states.",date:"2024-08-25T00:00:00.000Z",tags:[{label:"CSS",permalink:"/gerardo-perrucci/blog/tags/css"},{label:"Animation",permalink:"/gerardo-perrucci/blog/tags/animation"},{label:"Transition",permalink:"/gerardo-perrucci/blog/tags/transition"},{label:"starting-style",permalink:"/gerardo-perrucci/blog/tags/starting-style"}],readingTime:3.02,hasTruncateMarker:!0,authors:[{name:"Gerardo Perrucci",title:"Software Engineer",url:"https://github.com/centrodph",imageURL:"https://avatars.githubusercontent.com/u/2073951?v=4",key:"me"}],frontMatter:{slug:"css/animate-transition-from-display-none",title:"Animate transition from display: none to display: block",authors:["me"],tags:["CSS","Animation","Transition","starting-style"]},unlisted:!1,nextItem:{title:"Handling Forms in Next.js 13+ with Server Actions",permalink:"/gerardo-perrucci/blog/nextjs/nextjs-14-nextjs-13-handling-forms"}},l={authorsImageUrls:[void 0]},d=[{value:"The Challenge with display: none",id:"the-challenge-with-display-none",level:2},{value:"New CSS Features for Smooth Animations",id:"new-css-features-for-smooth-animations",level:2},{value:"Animating display in Keyframes",id:"animating-display-in-keyframes",level:2},{value:"The transition-behavior Property",id:"the-transition-behavior-property",level:2},{value:"The @starting-style Rule for Entry Animations",id:"the-starting-style-rule-for-entry-animations",level:2},{value:"Animating Elements to and from the Top Layer",id:"animating-elements-to-and-from-the-top-layer",level:2},{value:"CodePen Example",id:"codepen-example",level:2},{value:"Browser Support",id:"browser-support",level:2},{value:"Fallback for Older Browsers",id:"fallback-for-older-browsers",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Animating elements from ",(0,i.jsx)(n.code,{children:"display: none"})," to ",(0,i.jsx)(n.code,{children:"display: block"})," has long been a challenge in CSS. The traditional ",(0,i.jsx)(n.code,{children:"display"})," property doesn't support transitions, making smooth animations difficult. However, with the introduction of the ",(0,i.jsx)(n.code,{children:"@starting-style"})," at-rule and other new CSS features, we now have powerful tools to create seamless transitions between these states."]}),"\n",(0,i.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/vmDEHAzj2XE?start=150",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0}),"\n",(0,i.jsx)(n.h2,{id:"the-challenge-with-display-none",children:"The Challenge with display: none"}),"\n",(0,i.jsxs)(n.p,{children:["Traditionally, animating an element from ",(0,i.jsx)(n.code,{children:"display: none"})," to ",(0,i.jsx)(n.code,{children:"display: block"})," wasn't possible because:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"display"})," property is not animatable."]}),"\n",(0,i.jsxs)(n.li,{children:["When an element is ",(0,i.jsx)(n.code,{children:"display: none"}),", it's removed from the document flow, making it impossible to transition its properties."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"new-css-features-for-smooth-animations",children:"New CSS Features for Smooth Animations"}),"\n",(0,i.jsx)(n.p,{children:"Chrome 116 and 117 introduced four new web platform features that enable smooth animations and transitions for discrete properties:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Animating ",(0,i.jsx)(n.code,{children:"display"})," and ",(0,i.jsx)(n.code,{children:"content-visibility"})," on a keyframe timeline (Chrome 116+)"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"transition-behavior"})," property with the ",(0,i.jsx)(n.code,{children:"allow-discrete"})," keyword (Chrome 117+)"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"@starting-style"})," rule for entry animations (Chrome 117+)"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"overlay"})," property to control top-layer behavior during animations (Chrome 117+)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Let's explore these features in detail."}),"\n",(0,i.jsx)(n.h2,{id:"animating-display-in-keyframes",children:"Animating display in Keyframes"}),"\n",(0,i.jsxs)(n.p,{children:["From Chrome 116, you can use ",(0,i.jsx)(n.code,{children:"display"})," and ",(0,i.jsx)(n.code,{children:"content-visibility"})," in keyframe rules. Here's an example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".card {\n  animation: fade-out 0.5s forwards;\n}\n\n@keyframes fade-out {\n  100% {\n    opacity: 0;\n    display: none;\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This animation fades out the element and sets it to ",(0,i.jsx)(n.code,{children:"display: none"})," at the end."]}),"\n",(0,i.jsx)(n.h2,{id:"the-transition-behavior-property",children:"The transition-behavior Property"}),"\n",(0,i.jsxs)(n.p,{children:["To transition discrete properties like ",(0,i.jsx)(n.code,{children:"display"}),", use the ",(0,i.jsx)(n.code,{children:"allow-discrete"})," mode of the ",(0,i.jsx)(n.code,{children:"transition-behavior"})," property:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".card {\n  transition: opacity 0.25s, display 0.25s;\n  transition-behavior: allow-discrete;\n}\n\n.card.fade-out {\n  opacity: 0;\n  display: none;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"the-starting-style-rule-for-entry-animations",children:"The @starting-style Rule for Entry Animations"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@starting-style"})," rule allows you to define the initial state for entry animations:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"@starting-style {\n  .item {\n    opacity: 0;\n    height: 0;\n  }\n}\n\n.item {\n  height: 3rem;\n  display: grid;\n  overflow: hidden;\n  transition: opacity 0.5s, transform 0.5s, height 0.5s, display 0.5s allow-discrete;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This setup creates a smooth entry animation from ",(0,i.jsx)(n.code,{children:"height: 0"})," and ",(0,i.jsx)(n.code,{children:"opacity: 0"})," to the final state."]}),"\n",(0,i.jsx)(n.h2,{id:"animating-elements-to-and-from-the-top-layer",children:"Animating Elements to and from the Top Layer"}),"\n",(0,i.jsxs)(n.p,{children:["For elements like dialogs and popovers that use the top layer, you can use ",(0,i.jsx)(n.code,{children:"@starting-style"})," and the ",(0,i.jsx)(n.code,{children:"overlay"})," property for smooth animations:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n\ndialog[open] {\n  translate: 0 0;\n}\n\ndialog {\n  transition: translate 0.7s ease-out, overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;\n  translate: 0 100vh;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"overlay"})," property ensures that the element stays in the top layer during the animation, preventing it from being clipped or covered by other elements."]}),"\n",(0,i.jsx)(n.h2,{id:"codepen-example",children:"CodePen Example"}),"\n",(0,i.jsx)(n.p,{children:"Here's a CodePen demonstrating these techniques:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://codepen.io/your-username/pen/your-pen-id",children:"CodePen: Animate from display: none using @starting-style"})}),"\n",(0,i.jsx)(n.h2,{id:"browser-support",children:"Browser Support"}),"\n",(0,i.jsxs)(n.p,{children:["As of 2024, these features are supported in most modern browsers, including Chrome, Edge, and Firefox. However, it's always a good idea to check ",(0,i.jsx)(n.a,{href:"https://caniuse.com/?search=starting-style",children:"Can I use"})," for the latest browser support information."]}),"\n",(0,i.jsx)(n.h2,{id:"fallback-for-older-browsers",children:"Fallback for Older Browsers"}),"\n",(0,i.jsx)(n.p,{children:"For browsers that don't support these new features, you can use a JavaScript-based fallback:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"if (!CSS.supports('@starting-style {}')) {\n  // Fallback animation logic here\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["The introduction of ",(0,i.jsx)(n.code,{children:"@starting-style"}),", ",(0,i.jsx)(n.code,{children:"transition-behavior: allow-discrete"}),", and the ",(0,i.jsx)(n.code,{children:"overlay"})," property provides elegant solutions to the long-standing problem of animating elements from ",(0,i.jsx)(n.code,{children:"display: none"})," to ",(0,i.jsx)(n.code,{children:"display: block"}),". These features allow for smooth, performant transitions without the need for complex JavaScript workarounds."]}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style",children:"CSS @starting-style - MDN Web Docs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=vmDEHAzj2XE",children:"Animate Display None to Block - YouTube"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://caniuse.com/?search=starting-style",children:"Can I use: @starting-style"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.chrome.com/blog/entry-exit-animations#the_starting-style_rule_for_entry_animations",children:"Four new CSS features for smooth entry and exit animations - Chrome Developers"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);